{
  "global_parameter": [
    {
      "name": "bank color",
      "group": "Settings",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 20,
      "curve": "linear",
      "min_value": 0,
      "max_value": 360,
      "tooltip": "Color of the preset LED",
      "iterate": 1,
      "method": "bank_led_hue=value; set_led_color(bank_led_hue, 1.0, 1-led_attenuation);",
      "introduction_version": 2
    },
    {
      "name": "led attenuation",
      "group": "Settings",
      "default_value": 0,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 32,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Attenuation of the brightness of the LED",
      "iterate": 1,
      "method": "led_attenuation=value; set_led_color(bank_led_hue, 1.0, 1-led_attenuation);",
      "introduction_version": 3
    },
    {
      "name": "retrigger chords",
      "group": "Settings",
      "default_value": false,
      "data_type": "boolean",
      "ui_type": "switch",
      "sysex_adress": 21,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Defines whether chords retrigger when playing a modulation or in continuous chord mode",
      "iterate": 1,
      "method": "retrigger_chord=value;",
      "introduction_version": 2
    },
    {
      "name": "change held strings",
      "group": "Settings",
      "default_value": false,
      "data_type": "boolean",
      "ui_type": "switch",
      "sysex_adress": 22,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Defines whether a held harp note changes when changing chord",
      "iterate": 1,
      "method": "change_held_strings=value;",
      "introduction_version": 2
    },
    {
      "name": "slash level",
      "group": "Settings",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 23,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "Level of the scale affected when using slash chords",
      "iterate": 1,
      "method": "note_slash_level=value;",
      "introduction_version": 2
    },
    {
      "name": "transpose",
      "group": "Settings",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 30,
      "curve": "linear",
      "min_value": 0,
      "max_value": 12,
      "tooltip": "Transpose all sounds by a number of semitones",
      "iterate": 1,
      "method": "transpose_semitones=value; midi_base_note_transposed=midi_base_note+transpose_semitones;",
      "introduction_version": 2
    },
    {
      "name": "barry harris mode",
      "group": "Settings",
      "default_value": false,
      "data_type": "boolean",
      "ui_type": "switch",
      "sysex_adress": 33,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Changes major chords to major 6, minor to minor 6, and diminished to fully diminished",
      "iterate": 1,
      "method": "barry_harris_mode=value;",
      "introduction_version": 4
    },
    {
      "name": "firmware revision",
      "group": "hidden",
      "default_value": 0,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 7,
      "curve": "linear",
      "min_value": 0,
      "max_value": 10,
      "tooltip": "Firmware version identifier",
      "iterate": 1,
      "method": "current_sysex_parameters[7]=version_ID;",
      "introduction_version": 2
    },
    {
      "name": "reverb size",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 24,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Size of the reverb room",
      "iterate": 1,
      "method": "main_reverb.size(value);",
      "introduction_version": 2
    },
    {
      "name": "reverb high damping",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 25,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Damping of high frequencies in the reverb room",
      "iterate": 1,
      "method": "main_reverb.hidamp(value);",
      "introduction_version": 2
    },
    {
      "name": "reverb low damping",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 26,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Damping of low frequencies in the reverb room",
      "iterate": 1,
      "method": "main_reverb.lodamp(value);",
      "introduction_version": 2
    },
    {
      "name": "reverb low pass",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 27,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Additional low pass in the reverb room",
      "iterate": 1,
      "method": "main_reverb.lowpass(value);",
      "introduction_version": 2
    },
    {
      "name": "reverb diffusion",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 28,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Diffusion within the reverb room",
      "iterate": 1,
      "method": "main_reverb.diffusion(value);",
      "introduction_version": 2
    },
    {
      "name": "pan",
      "group": "Effects",
      "default_value": 1,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 29,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Pans the chord and harp sound, from fully separated to both in the middle",
      "iterate": 1,
      "method": "pan=value; apply_audio_parameter(85, current_sysex_parameters[85]); apply_audio_parameter(184, current_sysex_parameters[184]);",
      "introduction_version": 2
    }
  ],
  "harp_parameter": [
    {
      "name": "harp shuffling",
      "group": "General",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 40,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5,
      "tooltip": "Defines harp patterns: 0=normal, 1=with second, 2=with fourth, 3=with sixth, 4=octaves, 5=chromatics",
      "iterate": 12,
      "method": "harp_shuffling_selection=value; currentè§¦0current_harp_notes[i]=calculate_note_harp(i,slash_chord,sharp_active);",
      "introduction_version": 2
    },
    {
      "name": "amplitude",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 41,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the 12 initial oscillators",
      "iterate": 12,
      "method": "string_waveform_array[i]->amplitude(value);",
      "introduction_version": 2
    },
    {
      "name": "waveform",
      "group": "Oscillator",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 42,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for oscillators: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 12,
      "method": "string_waveform_array[i]->begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "1": 5,
      "name": "attack",
      "group": "Envelope",
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 43,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the envelope",
      "iterate": 12,
      "method": "string_enveloppe_array[i]->attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold",
      "group": "Envelope",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 44,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the envelope",
      "iterate": 12,
      "method": "string_enveloppe_array[i]->hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay",
      "group": "Envelope",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 45,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the envelope",
      "iterate": 12,
      "method": "string_enveloppe_array[i]->decay(value);",
      "introduction_version": 2
    },
    {
      "name": "sustain",
      "group": "Envelope",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 46,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Sustain level of the envelope",
      "iterate": 12,
      "method": "string_enveloppe_array[i]->sustain(value);",
      "introduction_version": 2
    },
    {
      "name": "release",
      "group": "Envelope",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 47,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Release time of the envelope",
      "iterate": 12,
      "method": "string_enveloppe_array[i]->release(value);",
      "introduction_version": 2
    },
    {
      "name": "retrigger release",
      "group": "Envelope",
      "default_value": 5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 48,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 10,
      "tooltip": "Retrigger time of the envelope",
      "iterate": 12,
      "method": "string_enveloppe_array[i]->releaseNoteOn(value);",
      "introduction_version": 2
    },
    {
      "name": "base frequency",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 49,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 2000,
      "tooltip": "Corner frequency of the filter in the absence of control signal",
      "iterate": 1,
      "method": "string_filter_base_freq=value;",
      "introduction_version": 2
    },
    {
      "name": "keytrack value",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 50,
      "curve": "linear",
      "min_value": 0,
      "max_value": 3,
      "tooltip": "Value multiplied by note frequency and added to base corner frequency for keytracking",
      "iterate": 1,
      "method": "string_filter_keytrack=value;",
      "introduction_version": 2
    },
    {
      "name": "resonance",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 51,
      "curve": "linear",
      "min_value": 0.7,
      "max_value": 5,
      "tooltip": "Resonance of the filter",
      "iterate": 12,
      "method": "string_filter_array[i]->resonance(value);",
      "introduction_version": 2
    },
    {
      "name": "attack",
      "group": "Low pass filter",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 52,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the envelope filter",
      "iterate": 12,
      "method": "string_enveloppe_filter_array[i]->attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold",
      "group": "Low pass filter",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 53,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the envelope filter",
      "iterate": 12,
      "method": "string_enveloppe_filter_array[i]->hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay",
      "group": "Low pass filter",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 54,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the envelope filter",
      "iterate": 12,
      "method": "string_enveloppe_filter_array[i]->decay(value);",
      "introduction_version": 2
    },
    {
      "name": "sustain",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 55,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Sustain level of the envelope filter",
      "iterate": 12,
      "method": "string_enveloppe_filter_array[i]->sustain(value);",
      "introduction_version": 2
    },
    {
      "name": "release",
      "group": "Low pass filter",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 56,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Release time of the envelope filter",
      "iterate": 12,
      "method": "string_enveloppe_filter_array[i]->release(value);",
      "introduction_version": 2
    },
    {
      "name": "retrigger release",
      "group": "Low pass filter",
      "default_value": 5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 57,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Retrigger time of the envelope filter",
      "iterate": 12,
      "method": "string_enveloppe_filter_array[i]->releaseNoteOn(value);",
      "introduction_version": 2
    },
    {
      "name": "filter sensitivity",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 58,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5,
      "tooltip": "Sensitivity of the filter to the control envelope",
      "iterate": 12,
      "method": "string_filter_array[i]->octaveControl(value);",
      "introduction_version": 2
    },
    {
      "name": "waveform",
      "group": "Tremolo",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 59,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for tremolo: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 1,
      "method": "string_tremolo_lfo.begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "frequency",
      "group": "Tremolo",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 60,
      "curve": "linear",
      "min_value": 0,
      "max_value": 20,
      "tooltip": "Frequency of the tremolo",
      "iterate": 1,
      "method": "string_tremolo_lfo.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "amplitude",
      "group": "Tremolo",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 61,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the tremolo",
      "iterate": 1,
      "method": "string_tremolo_lfo.amplitude(0.01+value); string_tremolo_lfo.offset(1-value);",
      "introduction_version": 2
    },
    {
      "name": "waveform",
      "group": "Vibrato",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 62,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for vibrato: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 1,
      "method": "string_vibrato_lfo.begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "frequency",
      "group": "Vibrato",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 63,
      "curve": "linear",
      "min_value": 0,
      "max_value": 20,
      "tooltip": "Frequency of the vibrato oscillation",
      "iterate": 1,
      "method": "string_vibrato_lfo.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "amplitude",
      "group": "Vibrato",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 64,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the vibrato oscillation",
      "iterate": 1,
      "method": "string_vibrato_lfo.amplitude(0.01+value);",
      "introduction_version": 2
    },
    {
      "name": "attack",
      "group": "Vibrato",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 65,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_lfo.attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold",
      "group": "Vibrato",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 66,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_lfo.hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 67,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_lfo.decay(value);",
      "introduction_version": 2
    },
    {
      "name": "sustain",
      "group": "Vibrato",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 68,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Sustain level of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_lfo.sustain(value);",
      "introduction_version": 2
    },
    {
      "name": "release",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 69,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Release time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_lfo.release(value);",
      "introduction_version": 2
    },
    {
      "name": "retrigger release",
      "group": "Vibrato",
      "default_value": 5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 70,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Retrigger time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_lfo.releaseNoteOn(value);",
      "introduction_version": 2
    },
    {
      "name": "pitch bend",
      "group": "Vibrato",
      "default_value": 1,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 71,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "Continuous signal for pitch variation; 1 is center, <1 is negative, >1 is positive",
      "iterate": 1,
      "method": "string_vibrato_dc.amplitude(value-1);",
      "introduction_version": 2
    },
    {
      "name": "attack bend",
      "group": "Vibrato",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 72,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_dc.attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold bend",
      "group": "Vibrato",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 73,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_dc.hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay bend",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 74,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_dc.decay(value);",
      "introduction_version": 2
    },
    {
      "name": "retrigger release bend",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 75,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Retrigger time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_string_vibrato_dc.releaseNoteOn(value);",
      "introduction_version": 2
    },
    {
      "name": "intensity",
      "group": "Vibrato",
      "default_value": 5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 76,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Intensity of the vibrato and bend effect",
      "iterate": 12,
      "method": "string_waveform_array[i]->frequencyModulation(value);",
      "introduction_version": 2
    },
    {
      "name": "delay length",
      "group": "Effects",
      "default_value": 1,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 77,
      "curve": "linear",
      "min_value": 0,
      "max_value": 600,
      "tooltip": "Length in ms of the delay",
      "iterate": 1,
      "method": "delay_strings.delay(0,value);",
      "introduction_version": 2
    },
    {
      "name": "delay filter frequency",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 78,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Corner frequency of the filter in the delay loop",
      "iterate": 1,
      "method": "filter_delay_strings.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "delay filter resonance",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 79,
      "curve": "linear",
      "min_value": 0.7,
      "max_value": 5,
      "tooltip": "Resonance of the filter in the delay loop",
      "iterate": 1,
      "method": "filter_delay_strings.resonance(value);",
      "introduction_version": 2
    },
    {
      "name": "delay lowpass",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 80,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Lowpass component feedback into the delay",
      "iterate": 1,
      "method": "string_delay_mix.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "delay bandpass",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 81,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Bandpass component feedback into the delay",
      "iterate": 1,
      "method": "string_delay_mix.gain(2,value);",
      "introduction_version": 2
    },
    {
      "name": "delay highpass",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 82,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Highpass component feedback into the delay",
      "iterate": 1,
      "method": "string_delay_mix.gain(3,value);",
      "introduction_version": 2
    },
    {
      "name": "dry mix",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 83,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Intensity of the dry signal in the output",
      "iterate": 1,
      "method": "strings_effect_mix.gain(0,value);",
      "introduction_version": 2
    },
    {
      "name": "delay mix",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 84,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Intensity of the delayed signal in the output",
      "iterate": 1,
      "method": "strings_effect_mix.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "reverb level",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 85,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Level of the reverb applied to the harp signal",
      "iterate": 1,
      "method": "reverb_mixer.gain(0,value); string_r_stereo_gain.amplitude((1-reverb_dry_proportion*value)*pan,100); string_l_stereo_gain.amplitude(1-reverb_dry_proportion*value,100);",
      "introduction_version": 2
    },
    {
      "name": "crunch level",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 86,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Level of crunch applied to the harp signal",
      "iterate": 1,
      "method": "string_waveshaper_mix.gain(0,1-value); string_waveshaper_mix.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "crunch type",
      "group": "Effects",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 87,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "Selects the waveshaper transfer function, with increasing distortion",
      "iterate": 1,
      "method": "ws_sin_param=value; calculate_ws_array(); string_waveshape.shape(wave_shape,257);",
      "introduction_version": 2
    },
    {
      "name": "frequency",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 88,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Corner frequency of the output filter",
      "iterate": 1,
      "method": "string_filter.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "resonance",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 89,
      "curve": "linear",
      "min_value": 0.7,
      "max_value": 5,
      "tooltip": "Resonance of the output filter",
      "iterate": 1,
      "method": "string_filter.resonance(value);",
      "introduction_version": 2
    },
    {
      "name": "lowpass",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 90,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Output lowpass component",
      "iterate": 1,
      "method": "string_filter_mixer.gain(0,value);",
      "introduction_version": 2
    },
    {
      "name": "bandpass",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 91,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Output bandpass component",
      "iterate": 1,
      "method": "string_filter_mixer.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "highpass",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 92,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Output highpass component",
      "iterate": 1,
      "method": "string_filter_mixer.gain(2,value);",
      "introduction_version": 2
    },
    {
      "name": "LFO waveform",
      "group": "Output filter",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 93,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for output filter LFO: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 1,
      "method": "string_filter_lfo.begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "LFO frequency",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 94,
      "curve": "linear",
      "min_value": 0,
      "max_value": 20,
      "tooltip": "Frequency of the output filter control LFO",
      "iterate": 1,
      "method": "string_filter_lfo.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "LFO amplitude",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 95,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the output filter control LFO",
      "iterate": 1,
      "method": "string_filter_lfo.amplitude(value);",
      "introduction_version": 2
    },
    {
      "name": "filter LFO sensitivity",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 96,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5,
      "tooltip": "Sensitivity of the output filter to the control LFO",
      "iterate": 1,
      "method": "string_filter.octaveControl(value);",
      "introduction_version": 2
    },
    {
      "name": "output amplifier",
      "group": "Output filter",
      "default_value": 1,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 97,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "Amplifies the volume of the harp",
      "iterate": 1,
      "method": "string_amplifier.gain(value);",
      "introduction_version": 2
    },
    {
      "name": "chromatic mode",
      "group": "General",
      "default_value": false,
      "data_type": "boolean",
      "ui_type": "switch",
      "sysex_adress": 98,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Puts the harp in chromatic mode with static notes not dependent on chord selection",
      "iterate": 1,
      "method": "chromatic_harp_mode=value;",
      "introduction_version": 3
    },
    {
      "name": "octave change",
      "group": "General",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 99,
      "curve": "linear",
      "min_value": 0,
      "max_value": 4,
      "tooltip": "Changes the octave of the harp section up or down",
      "iterate": 12,
      "method": "harp_octave_change=value; current_harp_notes[i]=calculate_note_harp(i,slash_chord,sharp_active);",
      "introduction_version": 3
    },
    {
      "name": "waveform",
      "group": "Transient",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 100,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform of the transient: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 12,
      "method": "string_transient_waveform_array[i]->begin(waveform_array[value]);",
      "introduction_version": 5
    },
    {
      "name": "amplitude",
      "group": "Transient",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 101,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the transient",
      "iterate": 12,
      "method": "string_transient_waveform_array[i]->amplitude(value);",
      "introduction_version": 5
    },
    {
      "name": "attack",
      "group": "Transient",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 102,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the transient",
      "iterate": 12,
      "method": "string_transient_envelope_array[i]->attack(value);",
      "introduction_version": 5
    },
    {
      "name": "hold",
      "group": "Transient",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 103,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the transient",
      "iterate": 12,
      "method": "string_transient_envelope_array[i]->hold(value);",
      "introduction_version": 5
    },
    {
      "name": "decay",
      "group": "Transient",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 104,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the transient",
      "iterate": 12,
      "method": "string_transient_envelope_array[i]->decay(value); string_transient_envelope_array[i]->release(value);",
      "introduction_version": 5
    },
    {
      "name": "note level",
      "group": "Transient",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 105,
      "curve": "linear",
      "min_value": 0,
      "max_value": 24,
      "tooltip": "Level in the scale of the transient",
      "iterate": 1,
      "method": "transient_note_level=value;",
      "introduction_version": 5
    }
  ],
  "chord_parameter": [
    {
      "name": "release",
      "group": "Other",
      "default_value": 1000,
      "data_type": "int",
      "sysex_adress": 150,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "release time of the envelope filter",
      "iterate": 4,
      "method": "chord_envelope_filter_array[i]->release(value);",
      "introduction_version": 2,
      "ui_type": "slider"
    },
    {
      "name": "output amplifier",
      "group": "Other",
      "default_value": 1,
      "data_type": "float",
      "sysex_adress": 197,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "amplifies the volume of the chords",
      "iterate": 1,
      "method": "chords_amplifier.gain(value);",
      "introduction_version": 2,
      "ui_type": "select"
    },
    {
      "name": "global gain",
      "group": "hidden",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 3,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Global gain of the chord section",
      "iterate": 1,
      "method": "chords_gain.amplitude(value,100); chord_attack_velocity=value*127;",
      "introduction_version": 2
    },
    {
      "name": "chord shuffling",
      "group": "General",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 120,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5,
      "tooltip": "Chord patterns: 0=normal, 1-4=one octave up with different notes, 5=two octaves up",
      "iterate": 7,
      "method": "chord_shuffling_selection=value; current_chord_notes[i]=calculate_note_chord(i,slash_chord,sharp_active);",
      "introduction_version": 2
    },
    {
      "name": "amplitude 1",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 121,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the first oscillator",
      "iterate": 4,
      "method": "chord_osc_1_array[i]->amplitude(value);",
      "introduction_version": 2
    },
    {
      "name": "waveform 1",
      "group": "Oscillator",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 122,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for first oscillator: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 4,
      "method": "chord_osc_1_array[i]->begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "frequency multiplier 1",
      "group": "Oscillator",
      "default_value": 0,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 123,
      "curve": "linear",
      "min_value": 0.5,
      "max_value": 2,
      "tooltip": "Frequency multiplier for the first oscillator: 1=normal, 0.5=octave below, 2=octave above",
      "iterate": 1,
      "method": "osc_1_freq_multiplier=value;",
      "introduction_version": 2
    },
    {
      "name": "amplitude 2",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 124,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the second oscillator",
      "iterate": 4,
      "method": "chord_osc_2_array[i]->amplitude(value);",
      "introduction_version": 2
    },
    {
      "name": "waveform 2",
      "group": "Oscillator",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 125,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for second oscillator: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 4,
      "method": "chord_osc_2_array[i]->begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "frequency multiplier 2",
      "group": "Oscillator",
      "default_value": 0,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 126,
      "curve": "linear",
      "min_value": 0.5,
      "max_value": 2,
      "tooltip": "Frequency multiplier for the second oscillator: 1=normal, 0.5=octave below, 2=octave above",
      "iterate": 1,
      "method": "osc_2_freq_multiplier=value;",
      "introduction_version": 2
    },
    {
      "name": "amplitude 3",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 127,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the third oscillator",
      "iterate": 4,
      "method": "chord_osc_3_array[i]->amplitude(value);",
      "introduction_version": 2
    },
    {
      "name": "waveform 3",
      "group": "Oscillator",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 128,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for third oscillator: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 4,
      "method": "chord_osc_3_array[i]->begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "frequency multiplier 3",
      "group": "Oscillator",
      "default_value": 0,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 129,
      "curve": "linear",
      "min_value": 0.5,
      "max_value": 2,
      "tooltip": "Frequency multiplier for the third oscillator: 1=normal, 0.5=octave below, 2=octave above",
      "iterate": 1,
      "method": "osc_3_freq_multiplier=value;",
      "introduction_version": 2
    },
    {
      "name": "noise",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 130,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the noise oscillator",
      "iterate": 4,
      "method": "chord_voice_mixer_array[i]->gain(3,value);",
      "introduction_version": 2
    },
    {
      "name": "first note",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 131,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the first chord note",
      "iterate": 1,
      "method": "chord_voice_mixer.gain(0,value);",
      "introduction_version": 2
    },
    {
      "name": "second note",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 132,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the second chord note",
      "iterate": 1,
      "method": "chord_voice_mixer.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "third note",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 133,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the third chord note",
      "iterate": 1,
      "method": "chord_voice_mixer.gain(2,value);",
      "introduction_version": 2
    },
    {
      "name": "fourth note",
      "group": "Oscillator",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 134,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the fourth chord note",
      "iterate": 1,
      "method": "chord_voice_mixer.gain(3,value);",
      "introduction_version": 2
    },
    {
      "name": "inter-note delay",
      "group": "Oscillator",
      "default_value": 10,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 135,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Delay between each note of the chord",
      "iterate": 1,
      "method": "inter_string_delay=value*1000;",
      "introduction_version": 2
    },
    {
      "name": "random note delay",
      "group": "Oscillator",
      "default_value": 10,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 136,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Random delay between each note of the chord",
      "iterate": 1,
      "method": "random_delay=value*1000;",
      "introduction_version": 2
    },
    {
      "name": "attack",
      "group": "Envelope",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 137,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the envelope",
      "iterate": 4,
      "method": "chord_envelope_array[i]->attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold",
      "group": "Envelope",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 138,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the envelope",
      "iterate": 4,
      "method": "chord_envelope_array[i]->hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay",
      "group": "Envelope",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 139,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the envelope",
      "iterate": 4,
      "method": "chord_envelope_array[i]->decay(value);",
      "introduction_version": 2
    },
    {
      "name": "sustain",
      "group": "Envelope",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 140,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Sustain level of the envelope",
      "iterate": 4,
      "method": "chord_envelope_array[i]->sustain(value);",
      "introduction_version": 2
    },
    {
      "name": "release",
      "group": "Envelope",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 141,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Release time of the envelope",
      "iterate": 4,
      "method": "chord_envelope_array[i]->release(value);",
      "introduction_version": 2
    },
    {
      "name": "retrigger release",
      "group": "Envelope",
      "default_value": 5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 142,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Retrigger time of the envelope",
      "iterate": 4,
      "method": "chord_envelope_array[i]->releaseNoteOn(value); chord_retrigger_release=value;",
      "introduction_version": 2
    },
    {
      "name": "retrigger release",
      "group": "Low pass filter",
      "default_value": 5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 142,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Retrigger time of the envelope filter",
      "iterate": 4,
      "method": "chord_envelope_filter_array[i]->releaseNoteOn(value);",
      "introduction_version": 2
    },
    {
      "name": "base frequency",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 143,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Corner frequency of the filter in the absence of control signal",
      "iterate": 4,
      "method": "chord_filter_base_freq=value;",
      "introduction_version": 2
    },
    {
      "name": "keytrack value",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 144,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Value multiplied by note frequency and added to base corner frequency for keytracking",
      "iterate": 4,
      "method": "chord_filter_keytrack=value;",
      "introduction_version": 2
    },
    {
      "name": "resonance",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 145,
      "curve": "linear",
      "min_value": 0.7,
      "max_value": 5,
      "tooltip": "Resonance of the filter",
      "iterate": 4,
      "method": "chord_voice_filter_array[i]->resonance(value);",
      "introduction_version": 2
    },
    {
      "name": "attack",
      "group": "Low pass filter",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 146,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the envelope filter",
      "iterate": 4,
      "method": "chord_envelope_filter_array[i]->attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold",
      "group": "Low pass filter",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 147,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the envelope filter",
      "iterate": 4,
      "method": "chord_envelope_filter_array[i]->hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay",
      "group": "Low pass filter",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 148,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the envelope filter",
      "iterate": 4,
      "method": "chord_envelope_filter_array[i]->decay(value);",
      "introduction_version": 2
    },
    {
      "name": "sustain",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 149,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Sustain level of the envelope filter",
      "iterate": 4,
      "method": "chord_envelope_filter_array[i]->sustain(value);",
      "introduction_version": 2
    },
    {
      "name": "filter sensitivity",
      "group": "Low pass filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 151,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5,
      "tooltip": "Sensitivity of the filter to the control envelope",
      "iterate": 4,
      "method": "chord_voice_filter_array[i]->octaveControl(value);",
      "introduction_version": 2
    },
    {
      "name": "LFO waveform",
      "group": "Output filter",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 152,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for output filter LFO: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 1,
      "method": "chord_filter_lfo.begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "amplitude",
      "group": "Transient",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 153,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the transient",
      "iterate": 4,
      "method": "chord_transient_waveform_array[i]->amplitude(value);",
      "introduction_version": 5
    },
    {
      "name": "attack",
      "group": "Transient",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 154,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the transient",
      "iterate": 4,
      "method": "chord_transient_envelope_array[i]->attack(value);",
      "introduction_version": 5
    },
    {
      "name": "hold",
      "group": "Transient",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 155,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the transient",
      "iterate": 4,
      "method": "chord_transient_envelope_array[i]->hold(value);",
      "introduction_version": 5
    },
    {
      "name": "decay",
      "group": "Transient",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 156,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the transient",
      "iterate": 4,
      "method": "chord_transient_envelope_array[i]->decay(value); chord_transient_envelope_array[i]->release(value);",
      "introduction_version": 5
    },
    {
      "name": "note level",
      "group": "Transient",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 157,
      "curve": "linear",
      "min_value": 0,
      "max_value": 24,
      "tooltip": "Level in the scale of the transient",
      "iterate": 1,
      "method": "chord_transient_note_level=value;",
      "introduction_version": 5
    },
    {
      "name": "waveform",
      "group": "Tremolo",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 158,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for tremolo: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 1,
      "method": "chord_tremolo_lfo.begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "frequency",
      "group": "Tremolo",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 159,
      "curve": "linear",
      "min_value": 0,
      "max_value": 20,
      "tooltip": "Frequency of the tremolo",
      "iterate": 1,
      "method": "chord_tremolo_lfo.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "amplitude",
      "group": "Tremolo",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 160,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the tremolo",
      "iterate": 1,
      "method": "chord_tremolo_lfo.amplitude(0.01+value); chord_tremolo_lfo.offset(1-value);",
      "introduction_version": 2
    },
    {
      "name": "waveform",
      "group": "Vibrato",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 161,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform for vibrato: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 1,
      "method": "chord_vibrato_lfo.begin(waveform_array[value]);",
      "introduction_version": 2
    },
    {
      "name": "frequency",
      "group": "Vibrato",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 162,
      "curve": "linear",
      "min_value": 0,
      "max_value": 20,
      "tooltip": "Frequency of the vibrato oscillation",
      "iterate": 1,
      "method": "chord_vibrato_lfo.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "amplitude",
      "group": "Vibrato",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 163,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the vibrato oscillation",
      "iterate": 1,
      "method": "chord_vibrato_lfo.amplitude(0.01+value);",
      "introduction_version": 2
    },
    {
      "name": "attack",
      "group": "Vibrato",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 164,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_lfo.attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold",
      "group": "Vibrato",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 165,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_lfo.hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 166,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_lfo.decay(value);",
      "introduction_version": 2
    },
    {
      "name": "sustain",
      "group": "Vibrato",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 167,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Sustain level of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_lfo.sustain(value);",
      "introduction_version": 2
    },
    {
      "name": "release",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 168,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Release time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_lfo.release(value);",
      "introduction_version": 2
    },
    {
      "name": "retrigger release",
      "group": "Vibrato",
      "default_value": 5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 169,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Retrigger time of the vibrato envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_lfo.releaseNoteOn(value);",
      "introduction_version": 2
    },
    {
      "name": "pitch bend",
      "group": "Vibrato",
      "default_value": 1,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 170,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "Continuous signal for pitch variation; 1 is center, <1 is negative, >1 is positive",
      "iterate": 1,
      "method": "chord_vibrato_dc.amplitude(value-1);",
      "introduction_version": 2
    },
    {
      "name": "attack bend",
      "group": "Vibrato",
      "default_value": 15,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 171,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Attack time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_dc.attack(value);",
      "introduction_version": 2
    },
    {
      "name": "hold bend",
      "group": "Vibrato",
      "default_value": 2,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 172,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Hold time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_dc.hold(value);",
      "introduction_version": 2
    },
    {
      "name": "decay bend",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 173,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Decay time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_dc.decay(value);",
      "introduction_version": 2
    },
    {
      "name": "retrigger release bend",
      "group": "Vibrato",
      "default_value": 1000,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 174,
      "curve": "exponential",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Retrigger time of the pitch bend envelope",
      "iterate": 1,
      "method": "envelope_chord_vibrato_dc.releaseNoteOn(value);",
      "introduction_version": 2
    },
    {
      "name": "intensity",
      "group": "Vibrato",
      "default_value": 5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 175,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Intensity of the vibrato and bend effect",
      "iterate": 4,
      "method": "chord_osc_1_array[i]->frequencyModulation(value); chord_osc_2_array[i]->frequencyModulation(value); chord_osc_3_array[i]->frequencyModulation(value);",
      "introduction_version": 2
    },
    {
      "name": "delay length",
      "group": "Effects",
      "default_value": 1,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 176,
      "curve": "linear",
      "min_value": 0,
      "max_value": 600,
      "tooltip": "Length in ms of the delay",
      "iterate": 1,
      "method": "delay_chords.delay(0,value);",
      "introduction_version": 2
    },
    {
      "name": "delay filter frequency",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 177,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Corner frequency of the filter in the delay loop",
      "iterate": 1,
      "method": "filter_delay_chords.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "delay filter resonance",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 178,
      "curve": "linear",
      "min_value": 0.7,
      "max_value": 5,
      "tooltip": "Resonance of the filter in the delay loop",
      "iterate": 1,
      "method": "filter_delay_chords.resonance(value);",
      "introduction_version": 2
    },
    {
      "name": "delay lowpass",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 179,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Lowpass component feedback into the delay",
      "iterate": 1,
      "method": "chord_delay_mix.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "delay bandpass",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 180,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Bandpass component feedback into the delay",
      "iterate": 1,
      "method": "chord_delay_mix.gain(2,value);",
      "introduction_version": 2
    },
    {
      "name": "delay highpass",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 181,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Highpass component feedback into the delay",
      "iterate": 1,
      "method": "chord_delay_mix.gain(3,value);",
      "introduction_version": 2
    },
    {
      "name": "dry mix",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 182,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Intensity of the dry signal in the output",
      "iterate": 1,
      "method": "chords_effect_mix.gain(0,value);",
      "introduction_version": 2
    },
    {
      "name": "delay mix",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 183,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Intensity of the delayed signal in the output",
      "iterate": 1,
      "method": "chords_effect_mix.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "reverb level",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 184,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Level of the reverb applied to the chord signal",
      "iterate": 1,
      "method": "reverb_mixer.gain(1,value); chord_r_stereo_gain.amplitude((1-reverb_dry_proportion*value)*(1-pan),100); chord_l_stereo_gain.amplitude(1-reverb_dry_proportion*value,100);",
      "introduction_version": 2
    },
    {
      "name": "crunch level",
      "group": "Effects",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 185,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Level of crunch applied to the chord signal",
      "iterate": 1,
      "method": "chord_waveshaper_mix.gain(0,1-value); chord_waveshaper_mix.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "crunch type",
      "group": "Effects",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 186,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "Selects the waveshaper transfer function, with increasing distortion",
      "iterate": 1,
      "method": "ws_chord_param=value; calculate_ws_array(); chord_waveshape.shape(wave_shape,257);",
      "introduction_version": 2
    },
    {
      "name": "frequency",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 187,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5000,
      "tooltip": "Corner frequency of the output filter",
      "iterate": 1,
      "method": "chord_filter.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "resonance",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 188,
      "curve": "linear",
      "min_value": 0.7,
      "max_value": 5,
      "tooltip": "Resonance of the output filter",
      "iterate": 1,
      "method": "chord_filter.resonance(value);",
      "introduction_version": 2
    },
    {
      "name": "lowpass",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 189,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Output lowpass component",
      "iterate": 1,
      "method": "chord_filter_mixer.gain(0,value);",
      "introduction_version": 2
    },
    {
      "name": "bandpass",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 190,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Output bandpass component",
      "iterate": 1,
      "method": "chord_filter_mixer.gain(1,value);",
      "introduction_version": 2
    },
    {
      "name": "highpass",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 191,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Output highpass component",
      "iterate": 1,
      "method": "chord_filter_mixer.gain(2,value);",
      "introduction_version": 2
    },
    {
      "name": "waveform",
      "group": "Transient",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 192,
      "curve": "linear",
      "min_value": 0,
      "max_value": 11,
      "tooltip": "Waveform of the transient: sine, sawtooth, square, triangle, bandlimited pulse, pulse, reverse sawtooth, sample and hold, variable triangle, bandlimited sawtooth, reverse bandlimited sawtooth, bandlimited square",
      "iterate": 4,
      "method": "chord_transient_waveform_array[i]->begin(waveform_array[value]);",
      "introduction_version": 5
    },
    {
      "name": "LFO frequency",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 193,
      "curve": "linear",
      "min_value": 0,
      "max_value": 20,
      "tooltip": "Frequency of the output filter control LFO",
      "iterate": 1,
      "method": "chord_filter_lfo.frequency(value);",
      "introduction_version": 2
    },
    {
      "name": "LFO amplitude",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 194,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Amplitude of the output filter control LFO",
      "iterate": 1,
      "method": "chord_filter_lfo.amplitude(value);",
      "introduction_version": 2
    },
    {
      "name": "filter LFO sensitivity",
      "group": "Output filter",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 195,
      "curve": "linear",
      "min_value": 0,
      "max_value": 5,
      "tooltip": "Sensitivity of the output filter to the control LFO",
      "iterate": 1,
      "method": "chord_filter.octaveControl(value);",
      "introduction_version": 2
    },
    {
      "name": "output amplifier",
      "group": "Output filter",
      "default_value": 1,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 196,
      "curve": "linear",
      "min_value": 0,
      "max_value": 2,
      "tooltip": "Amplifies the volume of the chord",
      "iterate": 1,
      "method": "chord_amplifier.gain(value);",
      "introduction_version": 2
    },
    {
      "name": "octave change",
      "group": "General",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 198,
      "curve": "linear",
      "min_value": 0,
      "max_value": 4,
      "tooltip": "Changes the octave of the chord section up or down",
      "iterate": 4,
      "method": "chord_octave_change=value; current_chord_notes[i]=calculate_note_chord(i,slash_chord,sharp_active);",
      "introduction_version": 3
    }
  ],
  "chord_potentiometer": [
    {
      "name": "Chord Volume",
      "group": "Chord Potentiometer",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 3,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Controls the volume of the chord section",
      "iterate": 1,
      "method": "chord_pot.set_volume(value);",
      "introduction_version": 2
    },
    {
      "name": "Chord Alternate Control",
      "group": "Chord Potentiometer",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 10,
      "curve": "linear",
      "min_value": 40,
      "max_value": 219,
      "tooltip": "Defines the address targeted by the chord potentiometer alternate function",
      "iterate": 1,
      "method": "chord_pot.set_alternate(value);",
      "introduction_version": 2
    },
    {
      "name": "Chord Alternate Range",
      "group": "Chord Potentiometer",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 11,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Defines the control range of the chord potentiometer alternate function",
      "iterate": 1,
      "method": "chord_pot.set_alternate_range(value);",
      "introduction_version": 2
    }
  ],
  "harp_potentiometer": [
    {
      "name": "Harp Volume",
      "group": "Harp Potentiometer",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 2,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Controls the volume of the harp section",
      "iterate": 1,
      "method": "harp_pot.set_volume(value);",
      "introduction_version": 2
    },
    {
      "name": "Harp Alternate Control",
      "group": "Harp Potentiometer",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 12,
      "curve": "linear",
      "min_value": 40,
      "max_value": 219,
      "tooltip": "Defines the address targeted by the harp potentiometer alternate function",
      "iterate": 1,
      "method": "harp_pot.set_alternate(value);",
      "introduction_version": 2
    },
    {
      "name": "Harp Alternate Range",
      "group": "Harp Potentiometer",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 13,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Defines the control range of the harp potentiometer alternate function",
      "iterate": 1,
      "method": "harp_pot.set_alternate_range(value);",
      "introduction_version": 2
    }
  ],
  "modulation_potentiometer": [
    {
      "name": "Modulation",
      "group": "Modulation Potentiometer",
      "default_value": 0.5,
      "data_type": "float",
      "ui_type": "slider",
      "sysex_adress": 14,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Controls the modulation parameter",
      "iterate": 1,
      "method": "mod_pot.set_main(value);",
      "introduction_version": 2
    },
    {
      "name": "Mod Main Range",
      "group": "Modulation Potentiometer",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 15,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Defines the control range of the modulation potentiometer main function",
      "iterate": 1,
      "method": "mod_pot.set_main_range(value);",
      "introduction_version": 2
    },
    {
      "name": "Mod Alternate Control",
      "group": "Modulation Potentiometer",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "select",
      "sysex_adress": 16,
      "curve": "linear",
      "min_value": 40,
      "max_value": 219,
      "tooltip": "Defines the address targeted by the modulation potentiometer alternate function",
      "iterate": 1,
      "method": "mod_pot.set_alternate(value);",
      "introduction_version": 2
    },
    {
      "name": "Mod Alternate Range",
      "group": "Modulation Potentiometer",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 17,
      "curve": "linear",
      "min_value": 0,
      "max_value": 100,
      "tooltip": "Defines the control range of the modulation potentiometer alternate function",
      "iterate": 1,
      "method": "mod_pot.set_alternate_range(value);",
      "introduction_version": 2
    }
  ],
  "sharp_button_parameters": [
    {
      "name": "sharp function",
      "group": "Sharp Button",
      "default_value": false,
      "data_type": "boolean",
      "ui_type": "switch",
      "sysex_adress": 31,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1,
      "tooltip": "Change the sharp button to a flat button",
      "iterate": 1,
      "method": "flat_button_modifier=value;",
      "introduction_version": 3
    }
  ],
  "rhythm_button_parameters": [
    {
      "name": "rhythm pattern step 1",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 220,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the first step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[0]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 2",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 221,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the second step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[1]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 3",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 222,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the third step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[2]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 4",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 223,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the fourth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[3]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 5",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 224,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the fifth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[4]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 6",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 225,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the sixth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[5]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 7",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 226,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the seventh step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[6]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 8",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 227,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the eighth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[7]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 9",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 228,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the ninth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[8]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 10",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 229,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the tenth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[9]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 11",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 230,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the eleventh step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[10]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 12",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 231,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the twelfth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[11]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 13",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 232,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the thirteenth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[12]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 14",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 233,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the fourteenth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[13]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 15",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 234,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the fifteenth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[14]=value; update_rhythm();",
      "introduction_version": 2
    },
    {
      "name": "rhythm pattern step 16",
      "group": "Rhythm",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "switch",
      "sysex_adress": 235,
      "curve": "linear",
      "min_value": 0,
      "max_value": 128,
      "tooltip": "Velocity or trigger intensity for the sixteenth step of the chord rhythm pattern",
      "iterate": 1,
      "method": "rhythm_pattern[15]=value; update_rhythm();",
      "introduction_version": 2
    }
  ],
  "hidden_parameters": [
    {
      "name": "Chord Alternate Value",
      "group": "hidden",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 4,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1024,
      "tooltip": "Default value for chord potentiometer alternate function",
      "iterate": 1,
      "method": "chord_pot.set_alternate_default(value); chord_pot.force_update();",
      "introduction_version": 2
    },
    {
      "name": "Harp Alternate Value",
      "group": "hidden",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 5,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1024,
      "tooltip": "Default value for harp potentiometer alternate function",
      "iterate": 1,
      "method": "harp_pot.set_alternate_default(value); harp_pot.force_update();",
      "introduction_version": 2
    },
    {
      "name": "Mod Alternate Value",
      "group": "hidden",
      "default_value": 0,
      "data_type": "int",
      "ui_type": "slider",
      "sysex_adress": 6,
      "curve": "linear",
      "min_value": 0,
      "max_value": 1024,
      "tooltip": "Default value for modulation potentiometer alternate function",
      "iterate": 1,
      "method": "mod_pot.set_alternate_default(value); mod_pot.force_update();",
      "introduction_version": 2
    }
  ]
}